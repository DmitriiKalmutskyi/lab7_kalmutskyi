let now = new Date();                     //плинне значення
let tssp = new Date(now.getTime()- 5000); //задане значення
console.log ("Зараз - \t\t" + now.toLocaleString());
console.log ("5 секунд назад було \t" + tssp.toLocaleString());

let ny = new Date(now.getFullYear() + ", 1, 1 00:00:00"); //дата та часу нового року
let fromny = {
    //кількість секунд з нового року
    totalsec: Math.fround((now.getTime() - ny.getTime())/1000)
}; 
//поділено на кількість секунд за добу
fromny.days = Math.floor(fromny.totalsec/(60*60*24));
//остача від ділення кількості годин з НР на 24 
fromny.hours = Math.floor(fromny.totalsec/(60*60)) % 24;
//остача від ділення кількості хивлин з НР на 60
fromny.mins = Math.floor(fromny.totalsec/(60)) % 60;
//остача від ділення кількості секунд з НР на 60
fromny.seconds = fromny.totalsec % 60;        
console.log ("З нового року пройшло \t" + fromny.days + " днів, " + fromny.hours + " годин," + fromny.mins + " хвилин, " + fromny.seconds + " секунд.");

/*
Призначення кожної функції, яка використана в фрагменті:
- new Date(): створює новий об'єкт Date, що містить поточну дату та час.
- getTime(): повертає кількість мілісекунд з 1 січня 1970 року до заданої дати.
- toLocaleString(): повертає строкове представлення дати у локальному форматі.
- getFullYear(): повертає рік заданої дати.
- Math.fround(): повертає найближче число з плаваючою крапкою з одинарною точністю.
- Math.floor(): округлює число вниз до найближчого цілого.

Розрахунок часу нового року:
- Використовується поточний рік (now.getFullYear()), до якого додається ", 1, 1 00:00:00", що створює дату 1 січня поточного року о 00:00:00.

Призначення службового символу \t:
- \t - це символ табуляції, який використовується для додавання горизонтального відступу у строку виводу.

Призначення оператору %:
- % - це оператор остачі від ділення, який повертає остачу від ділення одного числа на інше. Використовується для розрахунку залишкових годин, хвилин і секунд.

Порівняння результатів кількості годин з астрономічним часом:
- Результати можуть не співпадати з астрономічним часом через округлення, похибки у функціях розрахунку часу або через літній час. Необхідно враховувати всі часові зміщення, такі як перехід на літній час або зміни часових поясів.
*/